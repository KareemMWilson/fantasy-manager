version: "3.8"

services:
  # ----------------------------
  # PostgreSQL Database
  # ----------------------------
  db:
    image: postgres:17
    container_name: fantasy_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fantacy_manager
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5

  # ----------------------------
  # Redis
  # ----------------------------
  redis:
    image: redis:7
    container_name: fantasy_redis
    environment:
      REDIS_PASSWORD: "password"
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # ----------------------------
  # Backend
  # ----------------------------
  backend:
    container_name: fantasy_manager_back
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      NODE_ENV: production
      PORT: 5000

      # Database Vars
      DATABASE_URL: postgresql://postgres:postgres@db:5432/fantacy_manager

      # Redis Vars
      REDIS_HOST: redis
      REDIS_PORT: 6379

      # JWT secret
      JWT_SECRET: kareem-secret

      # FRONTEND
      FRONTEND_URL: http://localhost:5173

  # ----------------------------
  # Frontend
  # ----------------------------
  frontend:
    container_name: fantasy_manager_front
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    environment:
      BACKEND_URL: http://localhost:5000
volumes:
  db_data:
  redis_data:
